{"version":3,"sources":["webpack:///./src/app/pages/account/disconnetti/disconnetti.html","webpack:///./src/app/pages/account/disconnetti/disconnetti.module.ts","webpack:///./src/app/pages/account/disconnetti/disconnetti.ts"],"names":[],"mappings":"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","file":"pages-account-disconnetti-disconnetti-module.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-grid no-padding>\\n    <ion-row *ngIf=\\\"!globalData.landscape && globalData.iPhoneX\\\">\\n      <ion-col>\\n        <ion-label> </ion-label>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row no-padding>\\n      <ion-col no-padding>\\n        <ion-toolbar>\\n          <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n          </ion-buttons>\\n          <ion-title>\\n            Disconnessione\\n          </ion-title>\\n        </ion-toolbar>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-header>\\n\\n<ion-content padding>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { DisconnettiPage } from './disconnetti';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        RouterModule.forChild([\n            {\n                path: '',\n                component: DisconnettiPage\n            }\n        ])\n    ],\n    declarations: [DisconnettiPage]\n})\nexport class DisconnettiPageModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {LoadingController, AlertController, ToastController} from '@ionic/angular';\nimport {Storage } from '@ionic/storage';\nimport {SyncService} from '../../../services/sync.service';\nimport {GlobalDataService} from '../../../services/global-data.service';\nimport {NotificheService} from '../../../services/notifiche.service';\nimport {AccountService} from '../../../services/account.service';\nimport {HttpService} from '../../../services/http.service';\n\n\n\n@Component({\n    selector: 'app-page-disconnetti',\n    templateUrl: 'disconnetti.html',\n})\nexport class DisconnettiPage implements OnInit {\n\n    url: any;\n    token: string;\n    tokenNotifiche: string;\n\n    constructor(\n        public sync: SyncService,\n        public globalData: GlobalDataService,\n        public http: HttpService,\n        public notificheService: NotificheService,\n        public account: AccountService,\n        public loadingCtrl: LoadingController,\n        public alertCtrl: AlertController,\n        public toastCtrl: ToastController,\n        public storage: Storage) {\n    }\n\n    ngOnInit() {\n        this.url = this.account.getUrlDisconnetti();\n\n        this.storage.get('token').then((val) => {\n            this.token = val;\n\n            this.alertCtrl.create({\n                header: 'Log out',\n                message: 'Sicuro di voler eliminare l\\'account dal dispositivo?',\n                buttons: [\n                    {\n                        text: 'Si',\n                        role: 'cancel',\n                        handler: () => {\n                            this.logout();\n                        }\n                    },\n                    {\n                        text: 'No',\n                        handler: () => {\n                            this.continua();\n                        }\n                    }\n                ]\n            }).then(confirm => confirm.present());\n\n        });\n    }\n\n    logout() {\n        this.storage.get('tokenNotifiche').then((val) => {\n\n            // salviamo il tokenNotifiche e lo reinseriamo nel nuovo storage\n            this.tokenNotifiche = val;\n            let body;\n\n            body = {\n                token: this.token,\n            };\n\n            this.loadingCtrl.create({\n                message: 'Attendere...'\n            }).then(loading => {\n\n                loading.present();\n\n                this.http.post(this.url, body).then(\n                    (response) => {\n                        loading.dismiss();\n                        if (response) {\n                            this.notificheService.rimuoviSottoscrizioni();\n                            this.storage.clear();\n                            this.storage.set('logged', false);\n                            this.storage.set('tokenNotifiche', this.tokenNotifiche);\n                            this.globalData.goTo(this.globalData.srcPage, '/login', 'root', false);\n                            this.toastCtrl.create({\n                                message: response.toString(),\n                                duration: 3000\n                            }).then(\n                                (toast) => {toast.present(); },\n                                (errToast) => { GlobalDataService.log(2, 'Errore Toast', errToast); });\n                        } else {\n                            this.globalData.goTo(this.globalData.srcPage, '/home', 'root', false);\n                        }\n                    }, (reject) => {\n                        GlobalDataService.log(\n                            2,\n                            this.url,\n                            reject);\n                        loading.dismiss();\n                        this.presentConfirm();\n                    }\n                );\n            });\n        });\n    }\n\n    continua() {\n        this.storage.set('logged', true);\n\n        if ( this.globalData.srcPage ) {\n            this.globalData.goTo(this.globalData.srcPage, this.globalData.srcPage, 'root', false);\n        } else {\n            this.globalData.goTo('/home', '/home', 'root', false);\n\n        }\n    }\n\n    presentConfirm() {\n        this.alertCtrl.create({\n            header: 'Errore',\n            subHeader: 'Server non raggiungibile',\n            message: 'Il server non risponde. Per poter cancellare la registrazione di questo dispoditivo devi essere connesso ' +\n            'ad Internet. Se procedi, i dati sul tuo dispositivo saranno rimossi, ma i dati sul server non potranno essere cancellati. ' +\n            'Sei sicuro di voler procedere?',\n            buttons: [\n                {\n                    text: 'Disconnetti',\n                    role: 'cancel',\n                    handler: () => {\n                            this.storage.clear();\n                            this.storage.set('tokenNotifiche', this.tokenNotifiche);\n                            this.notificheService.rimuoviSottoscrizioni().then(\n                                () => {\n                                    this.globalData.goTo('/login', '/login', 'root', false);\n\n                                }\n                            );\n                    }\n                },\n                {\n                    text: 'Annulla',\n                    handler: () => {\n                        this.globalData.goTo('/home', '/home', 'root', false);\n                    }\n                }\n            ]\n        }).then(alert => alert.present());\n    }\n\n}\n"],"sourceRoot":""}