{"version":3,"sources":["webpack:///./src/app/pages/servizi/tasse/tasse.html","webpack:///./src/app/pages/servizi/tasse/tasse.module.ts","webpack:///./src/app/pages/servizi/tasse/tasse.ts"],"names":[],"mappings":"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","file":"pages-servizi-tasse-tasse-module.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-grid no-padding>\\n        <ion-row *ngIf=\\\"!globalData.landscape && globalData.iPhoneX\\\">\\n            <ion-col>\\n                <ion-label> </ion-label>\\n            </ion-col>\\n        </ion-row>\\n        <ion-row no-padding>\\n            <ion-col no-padding>\\n                <ion-toolbar>\\n                    <ion-buttons slot=\\\"start\\\">\\n                        <ion-menu-button></ion-menu-button>\\n                    </ion-buttons>\\n                    <ion-title>\\n                        Tasse\\n                    </ion-title>\\n                </ion-toolbar>\\n            </ion-col>\\n        </ion-row>\\n    </ion-grid>\\n</ion-header>\\n\\n<ion-content [ngSwitch]=\\\"sezioni\\\">\\n\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"false\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n        <ion-refresher-content></ion-refresher-content>\\n    </ion-refresher>\\n\\n    <ion-toolbar>\\n        <ion-segment [(ngModel)]=\\\"sezioni\\\">\\n            <ion-segment-button value=\\\"da-pagare\\\">Da Pagare</ion-segment-button>\\n            <ion-segment-button value=\\\"pagate\\\">Pagate</ion-segment-button>\\n        </ion-segment>\\n    </ion-toolbar>\\n    <ion-list *ngSwitchCase=\\\"'da-pagare'\\\">\\n        <ion-grid *ngIf=\\\"rinvioAggiornamento && !tasseDaPagare\\\" text-center>\\n            <ion-row>\\n                <ion-col text-center >\\n                    <img class=\\\"progress\\\" src=\\\"assets/img/progress.gif\\\" />\\n                </ion-col>\\n            </ion-row>\\n            <ion-row>\\n                <ion-col text-center>\\n                    <ion-title><strong>Aggiornamento in corso</strong></ion-title>\\n                </ion-col>\\n            </ion-row>\\n            <ion-row>\\n                <ion-col text-center>\\n                    <ion-label>un attimo di pazienza</ion-label>\\n                </ion-col>\\n            </ion-row>\\n        </ion-grid>\\n\\n        <ion-grid *ngIf=\\\"!rinvioAggiornamento && tasseDaPagare?.length == 0\\\">\\n            <ion-row>\\n                <ion-col>\\n                    <ion-label text-center text-wrap>\\n                        <strong>Sembra non ci sia nulla da pagare</strong>\\n                    </ion-label>\\n                </ion-col>\\n            </ion-row>\\n            <ion-row>\\n                <ion-col>\\n                    <ion-label text-wrap>\\n                        <strong>Ricorda che questa scheda non ha valore ufficiale</strong>\\n                    </ion-label>\\n                    <ion-label text-wrap>Controlla sempre le scadenze sul Portale dello Studente!</ion-label>\\n                </ion-col>\\n            </ion-row>\\n            <ion-row>\\n                <ion-col text-center>\\n                    <img class=\\\"logo\\\" src=\\\"assets/img/ok.png\\\" />\\n                </ion-col>\\n            </ion-row>\\n        </ion-grid>\\n\\n        <ion-card *ngFor=\\\"let tax of tasseDaPagare\\\">\\n            <ion-card-content *ngIf=\\\"tax.IMPORTO  != '0'\\\">\\n                <ion-grid>\\n                    <ion-row>\\n                        <ion-col>\\n                            <ion-text color=\\\"primary\\\">\\n                                <ion-label><strong>{{this.getDescription(tax)}}</strong></ion-label>\\n                            </ion-text>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row>\\n                        <ion-col>\\n                            <ion-label>Importo: <strong>â‚¬ {{ tax.IMPORTO }}</strong></ion-label>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row>\\n                        <ion-col>\\n                            <ion-label>Anno accademico: <strong>{{ tax.AA}}</strong></ion-label>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row>\\n                        <ion-col>\\n                            <ion-label>Data addebito: <strong>{{tax.DATA_ADDEBITO}}</strong></ion-label>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row>\\n                        <ion-col>\\n                            <ion-label *ngIf=\\\"tax.DATA_SCADENZA\\\">Data scadenza: <strong>{{tax.DATA_SCADENZA}}</strong></ion-label>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row>\\n                        <ion-col>\\n                            <ion-label *ngIf=\\\"tax.NUMERO_MAV\\\">MAV: {{tax.NUMERO_MAV}}</ion-label>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n            </ion-card-content>\\n        </ion-card>\\n    </ion-list>\\n\\n    <ion-list *ngSwitchCase=\\\"'pagate'\\\">\\n        <ion-grid *ngIf=\\\"nrTassePagate==0\\\">\\n            <ion-row>\\n                <ion-col>\\n                    <ion-label text-center text-wrap>\\n                        <strong>Sembra non ci sia nulla qui</strong>\\n                    </ion-label>\\n                </ion-col>\\n            </ion-row>\\n            <ion-row>\\n                <ion-col>\\n                    <ion-label text-wrap>\\n                        <strong>Ricorda che questa scheda non ha valore ufficiale</strong>\\n                    </ion-label>\\n                    <ion-label text-wrap>Controlla sempre le scadenze sul Portale dello Studente!</ion-label>\\n                </ion-col>\\n            </ion-row>\\n            <ion-row>\\n                <ion-col text-center>\\n                    <img class=\\\"logo\\\" src=\\\"assets/img/ok.png\\\" />\\n                </ion-col>\\n            </ion-row>\\n        </ion-grid>\\n\\n        <ion-card *ngFor=\\\"let tax of tassePagate\\\">\\n            <ion-card-content *ngIf=\\\"tax.IMPORTO != '0'\\\">\\n                <ion-grid>\\n                    <ion-row>\\n                        <ion-col>\\n                            <ion-text color=\\\"primary\\\">\\n                                <ion-label><strong>{{this.getDescription(tax)}}</strong></ion-label>\\n                            </ion-text>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row>\\n                        <ion-col>\\n                            <ion-label>Importo: <strong>â‚¬ {{ tax.IMPORTO }}</strong></ion-label>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row>\\n                        <ion-col>\\n                            <ion-label>Anno accademico: <strong>{{ tax.AA}}</strong></ion-label>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row>\\n                        <ion-col>\\n                            <ion-label>Data addebito: <strong>{{tax.DATA_ADDEBITO}}</strong></ion-label>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row>\\n                        <ion-col>\\n                            <ion-label *ngIf=\\\"tax.DATA_SCADENZA\\\">Data scadenza: <strong>{{tax.DATA_SCADENZA}}</strong></ion-label>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row>\\n                        <ion-col>\\n                            <ion-label *ngIf=\\\"tax.DATA_PAGAMENTO\\\">Data pagamento: <strong>{{tax.DATA_PAGAMENTO}}</strong></ion-label>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row>\\n                        <ion-col>\\n                            <ion-label *ngIf=\\\"tax.NUMERO_MAV\\\">MAV: {{tax.NUMERO_MAV}}</ion-label>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n            </ion-card-content>\\n        </ion-card>\\n    </ion-list>\\n\\n</ion-content>\\n\\n<ion-footer  no-padding>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-spinner [hidden]=\\\"!isLoading() || !http.getConnected()\\\"></ion-spinner>\\n            <fa-icon [hidden]=\\\"isLoading() || !http.getConnected()\\\" [icon]=\\\"globalData.faLink\\\"></fa-icon>\\n            <fa-icon [hidden]=\\\"isLoading() || http.getConnected()\\\"  [icon]=\\\"globalData.faUnlink\\\"></fa-icon>\\n        </ion-buttons>\\n\\n        <div class=\\\"testo-footer\\\">\\n            Aggiornato al: {{dataAggiornamento}}\\n        </div>\\n\\n        <ion-buttons slot=\\\"end\\\" no-padding>\\n            <ion-icon slot=\\\"icon-only\\\" src=\\\"assets/icon/blank.png\\\"></ion-icon>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-footer>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { TassePage } from './tasse';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        FontAwesomeModule,\n        RouterModule.forChild([\n            {\n                path: '',\n                component: TassePage\n            }\n        ])\n    ],\n    declarations: [TassePage]\n})\nexport class TassePageModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {ToastController} from '@ionic/angular';\nimport {Storage } from '@ionic/storage';\nimport {SyncService} from '../../../services/sync.service';\nimport {GlobalDataService} from '../../../services/global-data.service';\nimport {AccountService} from '../../../services/account.service';\nimport {HttpService} from '../../../services/http.service';\n\n@Component({\n    selector: 'app-page-tasse',\n    templateUrl: 'tasse.html',\n})\nexport class TassePage implements OnInit {\n\n    currentPage = '/tasse';\n    idServizio = 11;\n    tasse: any;\n    tasseDaPagare: any;\n    tassePagate: any;\n    nrTasseDaPagare = 0;\n    nrTassePagate = 0;\n    sezioni: string;\n\n    dataAggiornamento: string;\n    aggiornamentoVerificato = false;\n    rinvioAggiornamento = false;\n    nrRinvii = 0;\n    maxNrRinvii = 5;\n\n    constructor(\n        private toastCtrl: ToastController,\n        public sync: SyncService,\n        public http: HttpService,\n        public storage: Storage,\n        public globalData: GlobalDataService,\n        public account: AccountService) {\n    }\n\n    ngOnInit() {\n        this.globalData.srcPage = this.currentPage;\n\n        this.account.controllaAccount().then(\n            (ok) => {\n                if (this.sezioni == null) {\n                    this.sezioni = 'da-pagare';\n                }\n                this.http.getConnected();\n                this.aggiorna(false, true);\n            }, (err) => {\n                this.globalData.goTo(this.currentPage, '/login', 'root', false);\n            }\n        );\n    }\n\n    aggiorna(interattivo: boolean, sync: boolean) {\n        if (this.sync.loading[this.idServizio]) {\n            this.rinvioAggiornamento = true;\n            this.dataAggiornamento = 'in corso';\n            this.nrRinvii++;\n\n            // console.log('Rinvio ' + this.nrRinvii);\n\n            if (this.nrRinvii < this.maxNrRinvii) {\n                setTimeout(() => {\n                    this.aggiorna(interattivo, sync);\n                }, 2000);\n                return;\n            } else {\n                if (this.http.connessioneLenta) {\n                    this.toastCtrl.create({\n                        message: 'La connessione Ã¨ assente o troppo lenta. Riprova ad aggiornare i dati piÃ¹ tardi.',\n                        duration: 3000,\n                        position: 'bottom'\n                    }).then( (toast) => {toast.present(); }, (toastErr) => { GlobalDataService.log(2, 'Toast fallito!', toastErr); });\n                }\n            }\n        }\n        this.rinvioAggiornamento = false;\n        this.nrRinvii = 0;\n\n        this.sync.getJson(this.idServizio, true).then(\n            (data) => {\n                if ( this.sync.dataIsChanged(this.tasse, data[0]) ) {\n                    this.tasse = data[0];\n                    this.caricaTasse();\n                    setTimeout(() => {\n                        this.controllaAggiornamento();\n                    }, 1000);\n                }\n                this.dataAggiornamento = SyncService.dataAggiornamento(data);\n            },\n            (err) => {\n                console.dir(err);\n            }).catch(err => {\n            }\n        );\n    }\n\n    controllaAggiornamento() {\n        // La verifica dell'aggiornamento in background la facciamo solo una volta\n        if (this.aggiornamentoVerificato) {\n            return;\n        }\n\n        // Se stiamo caricando dati dal server rimandiamo la verifica\n        if (this.sync.loading[this.idServizio]) {\n            setTimeout(() => {\n                this.controllaAggiornamento();\n            }, 1000);\n        } else {\n            this.aggiornamentoVerificato = true;\n            this.aggiorna(false, false);\n        }\n    }\n\n    isLoading() {\n        return this.sync.loading[this.idServizio];\n    }\n\n    doRefresh(refresher) {\n        if (refresher) {\n            refresher.target.complete();\n        }\n        this.aggiorna(true, true);\n    }\n\n    caricaTasse() {\n        if (this.tasse == null) {\n            return;\n        }\n\n        this.tasseDaPagare = Array();\n        this.tassePagate = Array();\n        this.nrTasseDaPagare = 0;\n        this.nrTassePagate = 0;\n\n        for (const riga of this.tasse) {\n            switch (riga.PAGATO) {\n                case '0':\n                    this.tasseDaPagare[this.nrTasseDaPagare] = riga;\n                    this.nrTasseDaPagare++;\n                    break;\n                case '1':\n                    this.tassePagate[this.nrTassePagate] = riga;\n                    this.nrTassePagate++;\n                    break;\n            }\n        }\n    }\n\n    getDescription(item) {\n        if (item.DESCRIZIONE) {\n            return item.DESCRIZIONE;\n        }\n        if (item.IMPORTO.startsWith('-')) {\n            return 'RIMBORSO';\n        } else {\n            return 'TASSA';\n        }\n    }\n}\n"],"sourceRoot":""}