{"version":3,"sources":["webpack:///./src/app/pages/account/login/login.html","webpack:///./src/app/pages/account/login/login.module.ts","webpack:///./src/app/pages/account/login/login.ts"],"names":[],"mappings":"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","file":"pages-account-login-login-module.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-grid no-padding>\\n    <ion-row *ngIf=\\\"!globalData.landscape && globalData.iPhoneX\\\">\\n      <ion-col>\\n        <ion-label> </ion-label>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row no-padding>\\n      <ion-col no-padding>\\n        <ion-toolbar>\\n          <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n          </ion-buttons>\\n          <ion-title>\\n            Studenti Unimol\\n          </ion-title>\\n        </ion-toolbar>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row justify-content-center>\\n      <ion-col text-center>\\n        <img class=\\\"logo\\\" src=\\\"assets/img/logo_unimol.png\\\" />\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col>\\n        <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\">\\n          <ion-list padding>\\n            <ion-item *ngIf=\\\"matricola\\\">\\n              <ion-label>Matricola: {{matricola}}</ion-label>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label floating>Username</ion-label>\\n              <ion-input type=\\\"text\\\" [autocomplete]=\\\"username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" required></ion-input>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label floating>Password</ion-label>\\n              <ion-input type=\\\"password\\\" [autocomplete]=\\\"password\\\" [(ngModel)]=\\\"password\\\"  name=\\\"password\\\" value=\\\"\\\" required></ion-input>\\n            </ion-item>\\n            <br />\\n            <div *ngIf=\\\"!fingerprintIsAvbailable\\\">\\n              <ion-button expand=\\\"block\\\" (click)=\\\"login()\\\" [disabled]=\\\"!f.valid\\\">Login</ion-button>\\n            </div>\\n            <div *ngIf=\\\"fingerprintIsAvbailable\\\">\\n              <ion-grid>\\n                <ion-row>\\n                  <ion-col size=\\\"10\\\" text-center>\\n                    <ion-button expand=\\\"block\\\" (click)=\\\"login()\\\" [disabled]=\\\"!f.valid\\\">Login</ion-button>\\n                  </ion-col>\\n                  <ion-col size=\\\"2\\\" text-center>\\n                    <ion-button color=\\\"light\\\" icon-only (click)='showFingerprintDialog()'>\\n                      <ion-icon name='finger-print' ></ion-icon>\\n                    </ion-button>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-grid>\\n            </div>\\n          </ion-list>\\n        </form>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\\n\\n<ion-footer  no-padding>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <fa-icon [hidden]=\\\"!http.getConnected()\\\" [icon]=\\\"globalData.faLink\\\"></fa-icon>\\n      <fa-icon [hidden]=\\\"http.getConnected()\\\"  [icon]=\\\"globalData.faUnlink\\\"></fa-icon>\\n    </ion-buttons>\\n\\n    <div class=\\\"testo-footer\\\">\\n      ver. {{appVersionNum? appVersionNum: '2.0.w'}}\\n    </div>\\n\\n    <ion-buttons slot=\\\"end\\\" no-padding>\\n      <ion-icon slot=\\\"icon-only\\\" src=\\\"assets/icon/blank.png\\\"></ion-icon>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-footer>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        FontAwesomeModule,\n        RouterModule.forChild([\n            {\n                path: '',\n                component: LoginPage\n            }\n        ])\n    ],\n    declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import {AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';\nimport { LoadingController, ToastController, Platform} from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { FingerprintAIO, FingerprintOptions } from '@ionic-native/fingerprint-aio/ngx';\nimport { AppVersion } from '@ionic-native/app-version/ngx';\nimport { isArray } from 'rxjs/internal/util/isArray';\nimport { SyncService } from '../../../services/sync.service';\nimport { GlobalDataService } from '../../../services/global-data.service';\nimport {AccountService} from '../../../services/account.service';\nimport {HttpService} from '../../../services/http.service';\n\n@Component({\n    selector: 'app-page-login',\n    templateUrl: 'login.html',\n})\n\nexport class LoginPage implements OnInit, AfterViewInit, OnDestroy {\n\n    currentPage = '/login';\n    username = '';\n    password = '';\n    matricola = '';\n    cds_id = '';\n    dip_id = '';\n    appVersionNum = '';\n\n    fingerprintIsAvbailable = false;\n    fingerprintOptions: FingerprintOptions;\n    fingerprintResult = '';\n\n    constructor(\n        public platform: Platform,\n        public appVersionProvider: AppVersion,\n        public fingerprint: FingerprintAIO,\n        public sync: SyncService,\n        public http: HttpService,\n        public globalData: GlobalDataService,\n        public loadingCtrl: LoadingController,\n        public toastCtrl: ToastController,\n        // public menu: MenuController,\n        public storage: Storage,\n        public account: AccountService) {\n\n    }\n\n    ngOnInit() {\n        // Prende la versione dell'app settata nel file config.xml\n        this.appVersionProvider.getVersionNumber().then((value) => {\n            this.appVersionNum = value;\n        });\n\n        this.account.controllaAccount().then(\n            (ok) => {\n                },\n            (err) => {\n                this.globalData.goTo(this.currentPage, '/login', 'root', false);\n            });\n    }\n\n    ngAfterViewInit() {\n        this.storage.get('username').then(\n            (user) => {\n                if ((user != null) && (user !== '') &&\n                    (this.platform.is('ios') || (this.platform.is('android')))) {\n\n                    this.fingerprint.isAvailable().then(\n                        (datiFP) => {\n                            console.dir(datiFP);\n                            let available = datiFP;\n\n                            if (available === 'OK' || available === 'finger') {\n                                available = 'Available';\n                            }\n\n                            if (available === 'Available') {\n                                this.fingerprintIsAvbailable = true;\n                                this.fingerprintOptions = {\n                                    clientId: 'Studenti Unimol',\n                                    clientSecret: 'password',\n                                    localizedFallbackTitle: 'Studenti Unimol',\n                                    localizedReason: 'Accedi all\\'App tramite impronta digitale',\n                                    // disableBackup: true,\n                                };\n                            } else {\n                                this.fingerprintIsAvbailable = false;\n                            }\n                        },\n                        (err) => {\n                            console.dir(err);\n                        }\n                    );\n                }\n            });\n\n        // this.menu.enable(false);\n        this.storage.get('username').then(data => {\n            this.username = data;\n        });\n    }\n\n    ngOnDestroy() {\n        // this.menu.enable(true);\n    }\n\n    async showFingerprintDialog() {\n        try {\n            // //await this.platform.ready();\n            // let available = await this.fingerprint.isAvailable();\n            // //console.log(available);\n            // // Uniformiamo lo stato (Android -> OK, iOS -> 'Available');\n            // if (available == 'OK')\n            //   available = 'Available';\n            if (this.fingerprintIsAvbailable) {\n                // this.fingerprintOptions = {\n                //   clientId: 'Studenti Unimol',\n                //   clientSecret: 'password',\n                //   localizedFallbackTitle: 'Studenti Unimol',\n                //   localizedReason: 'Accedi all\\'App tramite impronta digitale',\n                //   //disableBackup: true,\n                // };\n\n                this.fingerprintResult = await this.fingerprint.show(this.fingerprintOptions);\n\n                // Uniformiamo la risposta (Android -> Object, iOS -> 'Available');\n                if ((this.fingerprintResult['withPassword']) ||\n                    (this.fingerprintResult['withFingerprint']) ||\n                    (this.fingerprintResult['withBackup'])) {\n                    this.fingerprintResult = 'Success';\n                }\n\n                // Utente autenticato con lettore di impronte\n                if (this.fingerprintResult === 'Success') {\n                    const storedNome = this.storage.get('nome');\n                    const storedSesso = this.storage.get('sesso');\n                    Promise.all([storedNome, storedSesso]).then(data => {\n                        // this.ngZone.run(() => {\n                            let messaggio;\n                            if (data[1] === 'F') {\n                                messaggio = 'Bentornata ' + data[0];\n                            } else {\n                                messaggio = 'Bentornato ' + data[0];\n                            }\n                            this.toastCtrl.create({\n                                message: messaggio,\n                                duration: 3000\n                            }).then(\n                                (toast) => toast.present(),\n                                (errToast) => { GlobalDataService.log(2, 'Errore Toast', errToast); });\n                            this.storage.set('logged', true).then(\n                                () => {\n                                    this.globalData.goTo(this.currentPage, '/home', 'root', false);\n                                }, (errStorage) => {\n                                    GlobalDataService.log(2, 'Errore nella scrittura dei dati sullo storage!', errStorage);\n                                });\n                        });\n                    // });\n                }\n            }\n        } catch (err) {\n            GlobalDataService.log(2, 'Errore in showFingerprintDialog!', err);\n        }\n    }\n\n    login() {\n        this.loadingCtrl.create().then(loading => {\n            loading.present();\n\n            // let username = form.value.username.toLowerCase();\n            // let password = form.value.password;\n            const username = this.username;\n            const password = this.password;\n            const matricola = this.matricola;\n            const cds_id = this.cds_id;\n            const dip_id = this.dip_id;\n\n            this.account.login(username, password, matricola, cds_id, dip_id).then(\n                (risultato) => {\n                    // console.dir(risultato);\n\n                    loading.dismiss().then(\n                        () => {\n                            if (isArray(risultato)) {\n                                this.globalData.utente_test = this.username === 'test';\n                                this.globalData.username = this.username;\n                                this.globalData.password = this.password;\n                                this.globalData.carriere = risultato;\n                                this.globalData.goTo(this.currentPage, '/carriere', 'root', false);\n                            } else {\n                                switch (risultato) {\n                                    case 'unlocked' : {\n                                        this.globalData.goTo(this.currentPage, '/home', 'root', false);\n                                        break;\n                                    }\n                                    case 'logged': {\n                                        this.globalData.goTo(this.currentPage, '/tutorial', 'root', false);\n                                        break;\n                                    }\n                                    default: {\n                                        this.globalData.goTo(this.currentPage, '/login', 'root', false);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    );\n                },\n                (err) => {\n                    console.log('errore login');\n                    loading.dismiss();\n                    GlobalDataService.log(2, 'Login Reject', err);\n                }).catch(\n                (ex) => {\n                    loading.dismiss();\n                    GlobalDataService.log(2, 'Login Exception', ex);\n\n                }\n            );\n\n        });\n\n\n    }\n\n    // sleep(ms) {\n    //     return new Promise(resolve => setTimeout(resolve, ms));\n    // }\n\n    // toTitleCase(str) {\n    //     return str.replace(/\\w\\S*/g, function(txt) {\n    //         return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    //     });\n    // }\n}\n"],"sourceRoot":""}