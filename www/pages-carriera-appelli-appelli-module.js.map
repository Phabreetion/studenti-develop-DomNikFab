{"version":3,"sources":["webpack:///./src/app/pages/carriera/appelli/appelli.html","webpack:///./src/app/pages/carriera/appelli/appelli.module.ts","webpack:///./src/app/pages/carriera/appelli/appelli.ts"],"names":[],"mappings":";;;;;;;;;AAAA,0kCAA0kC,WAAW,iFAAiF,gBAAgB,42CAA42C,kCAAkC,sOAAsO,oBAAoB,iSAAiS,gCAAgC,qSAAqS,4CAA4C,KAAK,0CAA0C,qSAAqS,oBAAoB,sPAAsP,aAAa,6dAA6d,mBAAmB,kpDAAkpD,qCAAqC,iPAAiP,wBAAwB,oSAAoS,2BAA2B,kSAAkS,yCAAyC,qSAAqS,wBAAwB,sPAAsP,qBAAqB,wOAAwO,oBAAoB,m1CAAm1C,8BAA8B,sGAAsG,4BAA4B,+L;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAn4S;AACM;AACF;AACA;AACE;AAEP;AAC2B;AAiBnE;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAf7B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,kFAAiB;gBACjB,4DAAY,CAAC,QAAQ,CAAC;oBAClB;wBACI,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,oDAAW;qBACzB;iBACJ,CAAC;aACL;YACD,YAAY,EAAE,CAAC,oDAAW,CAAC;SAC9B,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxB6B;AACyB;AACrC;AACY;AACa;AACP;AACJ;AACF;AAC3D,qCAAqC;AAOrC;IAuBI,qBACY,KAAqB,EACrB,IAAiB,EAClB,IAAiB,EAChB,SAA0B,EAC1B,SAA0B,EAC1B,WAA8B,EAC/B,UAA6B,EAC7B,OAAuB,EACvB,KAAmB;QAT9B,iBAiBC;QAhBW,UAAK,GAAL,KAAK,CAAgB;QACrB,SAAI,GAAJ,IAAI,CAAa;QAClB,SAAI,GAAJ,IAAI,CAAa;QAChB,cAAS,GAAT,SAAS,CAAiB;QAC1B,cAAS,GAAT,SAAS,CAAiB;QAC1B,gBAAW,GAAX,WAAW,CAAmB;QAC/B,eAAU,GAAV,UAAU,CAAmB;QAC7B,YAAO,GAAP,OAAO,CAAgB;QACvB,UAAK,GAAL,KAAK,CAAc;QA9B9B,gBAAW,GAAG,UAAU,CAAC;QACzB,0BAAqB,GAAG,CAAC,CAAC;QAC1B,wBAAmB,GAAG,EAAE,CAAC;QAOzB,cAAS,GAAG,EAAE,CAAC;QACf,mBAAc,GAAG,EAAE,CAAC;QAEpB,iCAA4B,GAAG,KAAK,CAAC;QACrC,+BAA0B,GAAG,KAAK,CAAC;QACnC,uCAAkC,GAAG,KAAK,CAAC;QAC3C,qCAAgC,GAAG,KAAK,CAAC;QAEzC,wBAAmB,GAAG,KAAK,CAAC;QAC5B,aAAQ,GAAG,CAAC,CAAC;QACb,gBAAW,GAAG,CAAC,CAAC;QAaZ,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACtB,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;SAChC;QACD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAE,gBAAM;YAC/B,KAAI,CAAC,YAAY,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;QAC/C,CAAC,CAAE,CAAC;IACR,CAAC;IAGD,iCAAW,GAAX;QACI,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAED,8BAAQ,GAAR;QAAA,iBAaC;QAZG,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;QAE3C,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAChC,UAAC,EAAE;YACC,KAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;YACzB,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAE3B,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC/D,CAAC,EAAE,UAAC,GAAG;YACH,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QACpE,CAAC,CACJ,CAAC;IACN,CAAC;IAED,8BAAQ,GAAR,UAAS,WAAoB,EAAE,IAAa;QAA5C,iBA4GC;QA1GG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,EAAE;YAC/C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAChC,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC;YACpC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEhB,0CAA0C;YAE1C,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE;gBAClC,UAAU,CAAC;oBACP,KAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBACrC,CAAC,EAAE,IAAI,CAAC,CAAC;gBACT,OAAO;aACV;iBAAM;gBACH,IAAI,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;oBAC5B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;wBAClB,OAAO,EAAE,kFAAkF;wBAC3F,QAAQ,EAAE,IAAI;wBACd,QAAQ,EAAE,QAAQ;qBACrB,CAAC,CAAC,IAAI,CAAE,UAAC,KAAK,IAAM,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,UAAC,QAAQ,IAAO,+EAAiB,CAAC,GAAG,CAAC,CAAC,EAAE,gBAAgB,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACrH;aACJ;SACJ;QACD,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAGlB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC,IAAI,CACpD,UAAC,IAAI;YACD,IAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACxB,qEAAqE;YACrE,sGAAsG;YACtG,IAAI,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;gBAC1D,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACvB,KAAI,CAAC,4BAA4B,GAAG,kEAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;gBACxE,IAAI,KAAI,CAAC,YAAY,IAAI,IAAI,EAAE;oBAC3B,IAAM,KAAG,GAAG,KAAI,CAAC,YAAY,CAAC;oBAC9B,IAAI,KAAG,IAAI,KAAG,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;wBAC1B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAC,IAAI;4BAC/B,OAAO,CAAC,IAAI,CAAC,MAAM,KAAK,KAAG,CAAC,CAAC;wBACjC,CAAC,CAAC,CAAC;qBACN;iBACJ;gBACD,IAAI,KAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAG;oBAC1B,KAAI,CAAC,SAAS,GAAG,GAAG,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG,CAAC;iBACpD;qBAAM;oBACH,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;iBACvB;gBACD,UAAU,CAAC;oBACP,KAAI,CAAC,iCAAiC,EAAE,CAAC;gBAC7C,CAAC,EAAE,IAAI,CAAC,CAAC;aACZ;QACL,CAAC,EACD,UAAC,GAAG;YACA,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,GAAG,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;YACZ,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,GAAG,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAE;YAC7C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAChC,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC;YACpC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEhB,0CAA0C;YAE1C,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE;gBAClC,UAAU,CAAC;oBACP,KAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBACrC,CAAC,EAAE,IAAI,CAAC,CAAC;gBACT,OAAO;aACV;iBAAM;gBACH,IAAI,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;oBAC5B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;wBAClB,OAAO,EAAE,kFAAkF;wBAC3F,QAAQ,EAAE,IAAI;wBACd,QAAQ,EAAE,QAAQ;qBACrB,CAAC,CAAC,IAAI,CAAE,UAAC,KAAK,IAAM,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,UAAC,QAAQ,IAAO,+EAAiB,CAAC,GAAG,CAAC,CAAC,EAAE,gBAAgB,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACrH;aACJ;SACJ;QACD,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAElB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC,IAAI,CAClD,UAAC,IAAI;YACD,IAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACxB,wBAAwB;YACxB,IAAI,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,YAAY,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;gBAC/D,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC5B,kCAAkC;gBAClC,KAAI,CAAC,0BAA0B,GAAG,kEAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;gBACtE,IAAI,KAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC9B,KAAI,CAAC,cAAc,GAAG,GAAG,GAAG,KAAI,CAAC,YAAY,CAAC,MAAM,GAAG,GAAG,CAAC;iBAC9D;qBAAM;oBACH,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;iBAC5B;gBACD,UAAU,CAAC;oBACP,KAAI,CAAC,+BAA+B,EAAE,CAAC;gBAC3C,CAAC,EAAE,IAAI,CAAC,CAAC;aACZ;QACL,CAAC,EACD,UAAC,GAAG;YACA,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,GAAG,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;YACZ,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,GAAG,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uDAAiC,GAAjC;QAAA,iBAcC;QAbG,0EAA0E;QAC1E,IAAI,IAAI,CAAC,kCAAkC,EAAE;YACzC,OAAO;SACV;QACD,6DAA6D;QAC7D,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,EAAE;YAC/C,UAAU,CAAC;gBACP,KAAI,CAAC,iCAAiC,EAAE,CAAC;YAC7C,CAAC,EAAE,IAAI,CAAC,CAAC;SACZ;aAAM;YACH,IAAI,CAAC,kCAAkC,GAAG,IAAI,CAAC;YAC/C,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;SAC/B;IACL,CAAC;IAED,qDAA+B,GAA/B;QAAA,iBAcC;QAbG,0EAA0E;QAC1E,IAAI,IAAI,CAAC,gCAAgC,EAAE;YACvC,OAAO;SACV;QACD,6DAA6D;QAC7D,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAE;YAC7C,UAAU,CAAC;gBACP,KAAI,CAAC,+BAA+B,EAAE,CAAC;YAC3C,CAAC,EAAE,IAAI,CAAC,CAAC;SACZ;aAAM;YACH,IAAI,CAAC,gCAAgC,GAAG,IAAI,CAAC;YAC7C,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;SAC/B;IACL,CAAC;IAED,+BAAS,GAAT;QACI,QAAQ,IAAI,CAAC,OAAO,EAAE;YAClB,KAAK,aAAa;gBACd,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YACzD;gBACI,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;SAC1D;IACL,CAAC;IAED,+BAAS,GAAT,UAAU,SAAS;QACf,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QAE5B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,8BAAQ,GAAR;QACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,WAAW,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;IAC3E,CAAC;IAED,oCAAc,GAAd,UAAe,IAAI,EAAE,OAAO;QAA5B,iBAkGC;QAjGG,IAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAE7B,IAAI,sBAAsB,GAAG,OAAO,CAAC,wBAAwB,CAAC;QAC9D,sBAAsB,GAAG,sBAAsB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC3D,IAAM,iBAAiB,GAAG,sBAAsB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/D,IAAM,mBAAmB,GAAG,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3G,IAAM,UAAU,GAAG,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAEjD,IAAI,SAAS,IAAI,UAAU,EAAE;YACzB,IAAI,oBAAoB,GAAG,OAAO,CAAC,sBAAsB,CAAC;YAC1D,oBAAoB,GAAG,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACvD,IAAM,iBAAiB,GAAG,oBAAoB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC7D,IAAM,qBAAqB,GAAG,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7G,IAAM,WAAW,GAAG,IAAI,IAAI,CAAC,qBAAqB,CAAC,CAAC;YAEpD,IAAI,SAAS,IAAI,WAAW,EAAE;gBAE1B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBAClB,MAAM,EAAE,cAAc;oBACtB,SAAS,EAAE,+BAA+B;oBAC1C,OAAO,EAAE,sEAAsE;oBAC/E,OAAO,EAAE;wBACL;4BACI,IAAI,EAAE,IAAI;4BACV,OAAO,EAAE;gCACL,IAAI,CAAC,KAAK,EAAE,CAAC;gCACb,yCAAyC;4BAC7C,CAAC;yBACJ;wBACD;4BACI,IAAI,EAAE,IAAI;4BACV,OAAO,EAAE;gCACL,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,iBAAO;oCAClC,OAAO,CAAC,OAAO,EAAE,CAAC;oCAElB,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,cAAc,EAAE,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAC3F,UAAC,IAAI;wCACD,qBAAqB;wCACrB,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;wCAE3B,OAAO;wCACP,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,SAAS,EAAE;4CAC7B,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;4CAC1B,OAAO,CAAC,OAAO,EAAE,CAAC;4CAClB,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gDAClB,OAAO,EAAE,oDAAoD;oDAC7D,wCAAwC;gDACxC,QAAQ,EAAE,IAAI;6CACjB,CAAC,CAAC,IAAI,CACH,UAAC,KAAK,IAAM,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAC9B,UAAC,QAAQ,IAAO,+EAAiB,CAAC,GAAG,CAAC,CAAC,EAAE,gBAAgB,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4CAC7E,UAAU,CAAC;gDACP,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;4CAC9B,CAAC,EAAE,IAAI,CAAC,CAAC;yCACZ;6CAAM;4CACH,OAAO,CAAC,OAAO,EAAE,CAAC;4CAElB,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gDAClB,OAAO,EAAE,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;gDACnC,QAAQ,EAAE,IAAI;6CACjB,CAAC,CAAC,IAAI,CACH,UAAC,KAAK,IAAM,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAC9B,UAAC,QAAQ,IAAO,+EAAiB,CAAC,GAAG,CAAC,CAAC,EAAE,gBAAgB,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;yCAChF;oCACL,CAAC,EACD,UAAC,GAAG;wCACA,OAAO,CAAC,OAAO,EAAE,CAAC;wCAElB,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4CAClB,OAAO,EAAE,mEAAmE;gDAC5E,oBAAoB;4CACpB,QAAQ,EAAE,IAAI;yCACjB,CAAC,CAAC,IAAI,CACH,UAAC,KAAK,IAAM,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAC9B,UAAC,QAAQ,IAAO,+EAAiB,CAAC,GAAG,CAAC,CAAC,EAAE,gBAAgB,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACjF,CAAC,CAAC,CAAC;gCAEX,CAAC,CAAC,CAAC;4BACP,CAAC;yBACJ;qBACJ;iBACJ,CAAC,CAAC,IAAI,CAAC,eAAK,IAAI,YAAK,CAAC,OAAO,EAAE,EAAf,CAAe,CAAC,CAAC;aACrC;iBAAM;gBAEH,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBAClB,OAAO,EAAE,4CAA4C;oBACrD,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC,IAAI,CAAE,UAAC,KAAK,IAAM,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,UAAC,QAAQ,IAAO,+EAAiB,CAAC,GAAG,CAAC,CAAC,EAAE,gBAAgB,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACrH;SACJ;aAAM;YACH,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAClB,OAAO,EAAE,2DAA2D;gBACpE,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC,IAAI,CAAE,UAAC,KAAK,IAAM,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,UAAC,QAAQ,IAAO,+EAAiB,CAAC,GAAG,CAAC,CAAC,EAAE,gBAAgB,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACrH;IACL,CAAC;IAED,0CAAoB,GAApB,UAAqB,IAAI,EAAE,YAAY;QAAvC,iBAoFC;QAnFG,IAAI,yBAAyB,GAAG,YAAY,CAAC,YAAY,CAAC;QAC1D,yBAAyB,GAAG,yBAAyB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEjE,IAAM,iBAAiB,GAAG,yBAAyB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAClE,IAAM,sBAAsB,GAAG,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9G,IAAM,SAAS,GAAG,sBAAsB,CAAC,OAAO,CAAC,sBAAsB,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QAEvF,IAAM,WAAW,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAE7B,IAAI,SAAS,IAAI,WAAW,EAAE;YAC1B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAClB,MAAM,EAAE,cAAc;gBACtB,SAAS,EAAE,kCAAkC;gBAC7C,OAAO,EAAE,yGAAyG;gBAClH,OAAO,EAAE;oBACL;wBACI,IAAI,EAAE,IAAI;wBACV,OAAO,EAAE;4BACL,IAAI,CAAC,KAAK,EAAE,CAAC;4BACb,+CAA+C;wBACnD,CAAC;qBACJ;oBACD;wBACI,IAAI,EAAE,IAAI;wBACV,OAAO,EAAE;4BACL,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,iBAAO;gCAElC,OAAO,CAAC,OAAO,EAAE,CAAC;gCAElB,KAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,YAAY,CAAC,MAAM,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAI,CAChG,UAAC,IAAI;oCACD,qBAAqB;oCACrB,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,SAAS,EAAE;wCAC7B,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;wCAC3B,OAAO,CAAC,OAAO,EAAE,CAAC;wCAElB,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4CAClB,OAAO,EAAE,uEAAuE;4CAChF,QAAQ,EAAE,IAAI;yCACjB,CAAC,CAAC,IAAI,CACH,UAAC,KAAK,IAAM,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAC9B,UAAC,QAAQ,IAAO,+EAAiB,CAAC,GAAG,CAAC,CAAC,EAAE,gBAAgB,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCAE7E,UAAU,CAAC;4CACP,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;wCAC9B,CAAC,EAAE,IAAI,CAAC,CAAC;qCACZ;yCAAM;wCACH,OAAO,CAAC,OAAO,EAAE,CAAC;wCAElB,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4CAClB,OAAO,EAAE,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;4CACnC,QAAQ,EAAE,IAAI;yCACjB,CAAC,CAAC,IAAI,CACH,UAAC,KAAK,IAAM,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAC9B,UAAC,QAAQ,IAAO,+EAAiB,CAAC,GAAG,CAAC,CAAC,EAAE,gBAAgB,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCAC7E,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;qCAC9B;gCACL,CAAC,EACD,UAAC,GAAG;oCACA,oBAAoB;oCACpB,OAAO,CAAC,OAAO,EAAE,CAAC;oCAElB,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;wCAClB,OAAO,EAAE,qFAAqF;wCAC9F,QAAQ,EAAE,IAAI;qCACjB,CAAC,CAAC,IAAI,CACH,UAAC,KAAK,IAAM,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAC9B,UAAC,QAAQ,IAAO,+EAAiB,CAAC,GAAG,CAAC,CAAC,EAAE,gBAAgB,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gCACjF,CAAC,CAAC,CAAC;4BACX,CAAC,CAAC,CAAC;wBACP,CAAC;qBACJ;iBAEJ;aACJ,CAAC,CAAC,IAAI,CAAC,eAAK,IAAI,YAAK,CAAC,OAAO,EAAE,EAAf,CAAe,CAAC,CAAC;SACrC;aAAM;YACH,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAClB,OAAO,EAAE,wCAAwC;gBACjD,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC,IAAI,CAAE,UAAC,KAAK,IAAM,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,UAAC,QAAQ,IAAO,+EAAiB,CAAC,GAAG,CAAC,CAAC,EAAE,gBAAgB,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACrH;IACL,CAAC;IAGD,kCAAY,GAAZ,UAAa,IAAY;QACrB,OAAO,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAClE,CAAC;IA5ZQ,WAAW;QALvB,+DAAS,CAAC;YACP,QAAQ,EAAE,kBAAkB;YAC5B,oGAA2B;SAC9B,CAAC;yCA0BqB,8DAAc;YACf,kEAAW;YACZ,kEAAW;YACL,8DAAe;YACf,8DAAe;YACb,gEAAiB;YACnB,+EAAiB;YACpB,wEAAc;YAChB,oEAAY;OAhCrB,WAAW,CA8ZvB;IAAD,kBAAC;CAAA;AA9ZuB","file":"pages-carriera-appelli-appelli-module.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-grid no-padding>\\n    <ion-row *ngIf=\\\"!globalData.landscape && globalData.iPhoneX\\\">\\n      <ion-col>\\n        <ion-label> </ion-label>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row no-padding>\\n      <ion-col no-padding>\\n        <ion-toolbar>\\n          <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n          </ion-buttons>\\n          <ion-title>\\n            Appelli\\n          </ion-title>\\n          <ion-buttons slot=\\\"end\\\">\\n            <ion-back-button *ngIf=\\\"insegnamento\\\" defaultHref=\\\"/carriera\\\" text=\\\"Indietro\\\"></ion-back-button>\\n          </ion-buttons>\\n        </ion-toolbar>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-header>\\n\\n<ion-content [ngSwitch]=\\\"sezioni\\\">\\n\\n  <ion-refresher *ngIf=\\\"!insegnamento\\\" (ionRefresh)=\\\"doRefresh($event)\\\" slot=\\\"fixed\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n\\n  <ion-toolbar>\\n    <ion-segment [(ngModel)]=\\\"sezioni\\\" (ionChange)=\\\"ngOnInit()\\\">\\n      <ion-segment-button value=\\\"disponibili\\\">Disponibili {{nrAppelli}}</ion-segment-button>\\n      <ion-segment-button value=\\\"prenotati\\\">Prenotati {{nrPrenotazioni}}</ion-segment-button>\\n    </ion-segment>\\n  </ion-toolbar>\\n\\n  <ion-list *ngSwitchCase=\\\"'disponibili'\\\" >\\n    <ion-grid *ngIf=\\\"rinvioAggiornamento && appelli?.length == 0\\\" text-center>\\n      <ion-row>\\n        <ion-col>\\n          <img class=\\\"progress\\\" src=\\\"assets/img/progress.gif\\\" />\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col text-center>\\n          <ion-title><strong>Aggiornamento in corso</strong></ion-title>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col text-center>\\n          <ion-label>un attimo di pazienza</ion-label>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n    <ion-item *ngIf=\\\"!rinvioAggiornamento && appelli?.length == 0\\\" text-center>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col text-center>\\n            <h2>Non sono disponibili appelli</h2>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <img src=\\\"assets/img/sad.png\\\" />\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-item>\\n\\n    <ion-grid *ngIf=\\\"appelli?.length > 0\\\" text-center>\\n      <ion-row>\\n        <ion-col>\\n          <ion-item-sliding #slItem *ngFor=\\\"let item of appelli\\\">\\n\\n            <ion-item>\\n              <ion-grid fixed>\\n                <ion-row>\\n                  <ion-col text-wrap>\\n                    <div><b>{{ pulisciTesto(item.descrizione) }}</b></div>\\n                  </ion-col>\\n                </ion-row>\\n                <ion-row *ngIf=\\\"item.p10_app_des && item.p10_app_des != item.descrizione\\\">\\n                  <ion-col text-wrap>\\n                    <div>{{ item.p10_app_des }}</div>\\n                  </ion-col>\\n                </ion-row>\\n\\n                <ion-row>\\n                  <ion-col size=\\\"1\\\">\\n                    <ion-icon name=\\\"time\\\"></ion-icon>\\n                  </ion-col>\\n                  <ion-col size=\\\"9\\\">\\n                    <div>{{item.data_ora_app | slice:0:16}}</div>\\n                  </ion-col>\\n                </ion-row>\\n\\n                <ion-row>\\n                  <ion-col size=\\\"1\\\">\\n                    <ion-icon name=\\\"calendar\\\"></ion-icon>\\n                  </ion-col>\\n                  <ion-col size=\\\"9\\\">\\n                    <div>{{item.p10_app_data_inizio_iscr | slice:0:10}} - {{item.p10_app_data_fine_iscr | slice:0:10}}</div>\\n                  </ion-col>\\n                </ion-row>\\n\\n                <ion-row>\\n                  <ion-col size=\\\"1\\\">\\n                    <ion-icon name=\\\"settings\\\"></ion-icon>\\n                  </ion-col>\\n                  <ion-col size=\\\"3\\\">\\n                    <div>{{item.tipo_iscr_des}}</div>\\n                  </ion-col>\\n                  <ion-col size=\\\"1\\\">\\n                    <ion-icon name=\\\"information-circle\\\"></ion-icon>\\n                  </ion-col>\\n                  <ion-col size=\\\"4\\\">\\n                    <div>{{item.codice}}</div>\\n                  </ion-col>\\n                  <ion-col *ngIf=\\\"item.prenotabile_flg==0\\\" size=\\\"1\\\">\\n                    <ion-icon style=\\\"color:red\\\" name=\\\"people\\\"></ion-icon>\\n                  </ion-col>\\n                  <ion-col *ngIf=\\\"item.prenotabile_flg!=0\\\" size=\\\"1\\\">\\n                    <ion-icon style=\\\"color:green\\\" name=\\\"person-add\\\"></ion-icon>\\n                  </ion-col>\\n                  <ion-col size=\\\"2\\\">\\n                    <div>{{item.tot_iscritti}}</div>\\n                  </ion-col>\\n                </ion-row>\\n\\n              </ion-grid>\\n            </ion-item>\\n\\n            <ion-item-options side=\\\"end\\\" slot=\\\"top\\\">\\n              <ion-item-option (click)=\\\"prenotaAppello(slItem, item)\\\">\\n                Prenota\\n              </ion-item-option>\\n            </ion-item-options>\\n          </ion-item-sliding>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-list>\\n\\n\\n  <ion-list *ngSwitchCase=\\\"'prenotati'\\\" >\\n\\n    <ion-grid *ngIf=\\\"rinvioAggiornamento && prenotazioni?.length == 0\\\" text-center>\\n      <ion-row>\\n        <ion-col>\\n          <img class=\\\"progress\\\" src=\\\"assets/img/progress.gif\\\" />\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col text-center>\\n          <ion-title><strong>Aggiornamento in corso</strong></ion-title>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col text-center>\\n          <ion-label>un attimo di pazienza</ion-label>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n    <ion-item *ngIf=\\\"!rinvioAggiornamento && prenotazioni?.length == 0\\\" text-center>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col text-center>\\n            <h2>Non sono state effettuate prenotazioni</h2>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-item>\\n\\n    <ion-grid *ngIf=\\\"prenotazioni?.length > 0\\\" text-center>\\n      <ion-row>\\n        <ion-col>\\n          <ion-item-sliding #slItem *ngFor=\\\"let prenotazione of prenotazioni\\\">\\n            <ion-item>\\n              <ion-grid fixed>\\n                <ion-row>\\n                  <ion-col text-wrap>\\n                    <div><b>{{ pulisciTesto(prenotazione.ad_des) }}</b></div>\\n                  </ion-col>\\n                </ion-row>\\n                <ion-row *ngIf=\\\"prenotazione.app_des && prenotazione.app_des != prenotazione.ad_des\\\">\\n                  <ion-col text-wrap>\\n                    <div>{{ prenotazione.app_des }}</div>\\n                  </ion-col>\\n                </ion-row>\\n\\n                <ion-row>\\n                  <ion-col size=\\\"1\\\">\\n                    <ion-icon name=\\\"person\\\"></ion-icon>\\n                  </ion-col>\\n                  <ion-col size=\\\"11\\\">\\n                    <div>{{ prenotazione.presidente }}</div>\\n                  </ion-col>\\n                </ion-row>\\n\\n                <ion-row>\\n                  <ion-col size=\\\"1\\\">\\n                    <ion-icon name=\\\"time\\\"></ion-icon>\\n                  </ion-col>\\n                  <ion-col size=\\\"11\\\">\\n                    <div>{{prenotazione.data_ora_app  | slice:0:16}}</div>\\n                  </ion-col>\\n                </ion-row>\\n\\n                <ion-row>\\n                  <ion-col size=\\\"1\\\">\\n                    <ion-icon name=\\\"settings\\\"></ion-icon>\\n                  </ion-col>\\n                  <ion-col size=\\\"3\\\">\\n                    <div>{{prenotazione.tipo_iscr}}</div>\\n                  </ion-col>\\n                  <ion-col size=\\\"1\\\">\\n                    <ion-icon name=\\\"information-circle\\\"></ion-icon>\\n                  </ion-col>\\n                  <ion-col size=\\\"4\\\">\\n                    <div>{{prenotazione.ad_cod}}</div>\\n                  </ion-col>\\n                  <ion-col size=\\\"1\\\">\\n                    <ion-icon name=\\\"list\\\"></ion-icon>\\n                  </ion-col>\\n                  <ion-col size=\\\"2\\\">\\n                    <div>{{prenotazione.posiz}}</div>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-grid>\\n            </ion-item>\\n\\n            <!--\\n            <ion-item-options side=\\\"end\\\" slot=\\\"top\\\">\\n              <ion-button (click)=\\\"cancellaPrenotazione(slItem, prenotazione)\\\" color=\\\"danger\\\">\\n                <ion-icon name=\\\"trash\\\"></ion-icon>\\n                Cancella\\n              </ion-button>\\n            </ion-item-options>\\n            -->\\n            <ion-item-options side=\\\"end\\\" slot=\\\"top\\\">\\n              <ion-item-option color=\\\"danger\\\" (click)=\\\"cancellaPrenotazione(slItem, prenotazione)\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n              </ion-item-option>\\n            </ion-item-options>\\n          </ion-item-sliding>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-list>\\n\\n</ion-content>\\n\\n<ion-footer  no-padding>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-spinner [hidden]=\\\"!isLoading() || !http.getConnected()\\\"></ion-spinner>\\n      <fa-icon [hidden]=\\\"isLoading() || !http.getConnected()\\\" [icon]=\\\"globalData.faLink\\\"></fa-icon>\\n      <fa-icon [hidden]=\\\"isLoading() || http.getConnected()\\\"  [icon]=\\\"globalData.faUnlink\\\"></fa-icon>\\n    </ion-buttons>\\n    <div class=\\\"testo-footer\\\" *ngIf=\\\"sezioni=='disponibili'\\\">\\n      Aggiornato al: {{dataAggiornamentoDisponibili}}\\n    </div>\\n    <div class=\\\"testo-footer\\\" *ngIf=\\\"sezioni=='prenotati'\\\">\\n      Aggiornato al: {{dataAggiornamentoPrenotati}}\\n    </div>\\n    <ion-buttons slot=\\\"end\\\" no-padding>\\n      <ion-icon slot=\\\"icon-only\\\" src=\\\"assets/icon/blank.png\\\"></ion-icon>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-footer>\\n\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { AppelliPage } from './appelli';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        FontAwesomeModule,\n        RouterModule.forChild([\n            {\n                path: '',\n                component: AppelliPage\n            }\n        ])\n    ],\n    declarations: [AppelliPage]\n})\nexport class AppelliPageModule {}\n","import {Component, OnChanges, OnInit} from '@angular/core';\nimport {LoadingController, ToastController, AlertController } from '@ionic/angular';\nimport {ActivatedRoute} from '@angular/router';\nimport {SyncService} from '../../../services/sync.service';\nimport {GlobalDataService} from '../../../services/global-data.service';\nimport {AccountService} from '../../../services/account.service';\nimport {Esse3Service} from '../../../services/esse3.service';\nimport {HttpService} from '../../../services/http.service';\n// import {cursorTo} from \"readline\";\n\n@Component({\n    selector: 'app-page-appelli',\n    templateUrl: 'appelli.html',\n})\n\nexport class AppelliPage implements OnChanges, OnInit {\n\n    currentPage = '/appelli';\n    idServizioDisponibili = 1;\n    idServizioPrenotati = 10;\n\n    insegnamento: string;\n    dataAggiornamento: string;\n    sezioni: string;\n    appelli: Array<any>;\n    prenotazioni: Array<any>;\n    nrAppelli = '';\n    nrPrenotazioni = '';\n\n    dataAggiornamentoDisponibili = 'Mai';\n    dataAggiornamentoPrenotati = 'Mai';\n    aggiornamentoDisponibiliVerificato = false;\n    aggiornamentoPrenotatiVerificato = false;\n\n    rinvioAggiornamento = false;\n    nrRinvii = 0;\n    maxNrRinvii = 5;\n\n    constructor(\n        private route: ActivatedRoute,\n        private sync: SyncService,\n        public http: HttpService,\n        private toastCtrl: ToastController,\n        private alertCtrl: AlertController,\n        private loadingCtrl: LoadingController,\n        public globalData: GlobalDataService,\n        public account: AccountService,\n        public esse3: Esse3Service) {\n\n        if (this.sezioni == null) {\n            this.sezioni = 'disponibili';\n        }\n        this.route.params.subscribe( params => {\n            this.insegnamento = params['insegnamento'];\n        } );\n    }\n\n\n    ngOnChanges() {\n        this.ngOnInit();\n    }\n\n    ngOnInit() {\n        this.globalData.srcPage = this.currentPage;\n\n        this.account.controllaAccount().then(\n            (ok) => {\n                this.http.getConnected();\n                this.aggiorna(false, true);\n\n                this.insegnamento = this.route.snapshot.paramMap.get('id');\n            }, (err) => {\n                this.globalData.goTo(this.currentPage, '/login', 'root', false);\n            }\n        );\n    }\n\n    aggiorna(interattivo: boolean, sync: boolean) {\n\n        if (this.sync.loading[this.idServizioDisponibili]) {\n            this.rinvioAggiornamento = true;\n            this.dataAggiornamento = 'in corso';\n            this.nrRinvii++;\n\n            // console.log('Rinvio ' + this.nrRinvii);\n\n            if (this.nrRinvii < this.maxNrRinvii) {\n                setTimeout(() => {\n                    this.aggiorna(interattivo, sync);\n                }, 2000);\n                return;\n            } else {\n                if (this.http.connessioneLenta) {\n                    this.toastCtrl.create({\n                        message: 'La connessione è assente o troppo lenta. Riprova ad aggiornare i dati più tardi.',\n                        duration: 3000,\n                        position: 'bottom'\n                    }).then( (toast) => {toast.present(); }, (toastErr) => { GlobalDataService.log(2, 'Toast fallito!', toastErr); });\n                }\n            }\n        }\n        this.rinvioAggiornamento = false;\n        this.nrRinvii = 0;\n\n\n        this.sync.getJson(this.idServizioDisponibili, sync).then(\n            (data) => {\n                const newData = data[0];\n                // Ottimizziamo il refresh ignorandolo in caso di dati non modificati\n                // TODO: si potrebbe ottimizzare il contronto tra array con qualcosa di più efficiente dello stringify\n                if (JSON.stringify(this.appelli) !== JSON.stringify(newData)) {\n                    this.appelli = data[0];\n                    this.dataAggiornamentoDisponibili = SyncService.dataAggiornamento(data);\n                    if (this.insegnamento != null) {\n                        const val = this.insegnamento;\n                        if (val && val.trim() !== '') {\n                            this.appelli = data[0].filter((item) => {\n                                return (item.codice === val);\n                            });\n                        }\n                    }\n                    if (this.appelli.length > 0 ) {\n                        this.nrAppelli = '(' + this.appelli.length + ')';\n                    } else {\n                        this.nrAppelli = '';\n                    }\n                    setTimeout(() => {\n                        this.controllaAggiornamentoDisponibili();\n                    }, 1000);\n                }\n            },\n            (err) => {\n                console.log('Errore in aggiorna: ' + err);\n            }).catch(err => {\n            console.log('Eccezione in aggiorna: ' + err);\n        });\n\n        if (this.sync.loading[this.idServizioPrenotati]) {\n            this.rinvioAggiornamento = true;\n            this.dataAggiornamento = 'in corso';\n            this.nrRinvii++;\n\n            // console.log('Rinvio ' + this.nrRinvii);\n\n            if (this.nrRinvii < this.maxNrRinvii) {\n                setTimeout(() => {\n                    this.aggiorna(interattivo, sync);\n                }, 2000);\n                return;\n            } else {\n                if (this.http.connessioneLenta) {\n                    this.toastCtrl.create({\n                        message: 'La connessione è assente o troppo lenta. Riprova ad aggiornare i dati più tardi.',\n                        duration: 3000,\n                        position: 'bottom'\n                    }).then( (toast) => {toast.present(); }, (toastErr) => { GlobalDataService.log(2, 'Toast fallito!', toastErr); });\n                }\n            }\n        }\n        this.rinvioAggiornamento = false;\n        this.nrRinvii = 0;\n\n        this.sync.getJson(this.idServizioPrenotati, sync).then(\n            (data) => {\n                const newData = data[0];\n                // console.dir(newData);\n                if (JSON.stringify(this.prenotazioni) !== JSON.stringify(newData)) {\n                    this.prenotazioni = data[0];\n                    // console.dir(this.prenotazioni);\n                    this.dataAggiornamentoPrenotati = SyncService.dataAggiornamento(data);\n                    if (this.prenotazioni.length > 0) {\n                        this.nrPrenotazioni = '(' + this.prenotazioni.length + ')';\n                    } else {\n                        this.nrPrenotazioni = '';\n                    }\n                    setTimeout(() => {\n                        this.controllaAggiornamentoPrenotati();\n                    }, 1000);\n                }\n            },\n            (err) => {\n                console.log('Errore in aggiorna: ' + err);\n            }).catch(err => {\n            console.log('Eccezione in aggiorna: ' + err);\n        });\n    }\n\n    controllaAggiornamentoDisponibili() {\n        // La verifica dell'aggiornamento in background la facciamo solo una volta\n        if (this.aggiornamentoDisponibiliVerificato) {\n            return;\n        }\n        // Se stiamo caricando dati dal server rimandiamo la verifica\n        if (this.sync.loading[this.idServizioDisponibili]) {\n            setTimeout(() => {\n                this.controllaAggiornamentoDisponibili();\n            }, 1000);\n        } else {\n            this.aggiornamentoDisponibiliVerificato = true;\n            this.aggiorna(false, false);\n        }\n    }\n\n    controllaAggiornamentoPrenotati() {\n        // La verifica dell'aggiornamento in background la facciamo solo una volta\n        if (this.aggiornamentoPrenotatiVerificato) {\n            return;\n        }\n        // Se stiamo caricando dati dal server rimandiamo la verifica\n        if (this.sync.loading[this.idServizioPrenotati]) {\n            setTimeout(() => {\n                this.controllaAggiornamentoPrenotati();\n            }, 1000);\n        } else {\n            this.aggiornamentoPrenotatiVerificato = true;\n            this.aggiorna(false, false);\n        }\n    }\n\n    isLoading() {\n        switch (this.sezioni) {\n            case 'disponibili':\n                return this.sync.loading[this.idServizioDisponibili];\n            default :\n                return this.sync.loading[this.idServizioPrenotati];\n        }\n    }\n\n    doRefresh(refresher) {\n        refresher.target.complete();\n\n        this.aggiorna(true, true);\n    }\n\n    onGoBack()  {\n        this.globalData.goTo(this.currentPage, '/libretto', 'backward', false);\n    }\n\n    prenotaAppello(item, appello) {\n        const data_oggi = new Date();\n\n        let data_inizio_iscrizione = appello.p10_app_data_inizio_iscr;\n        data_inizio_iscrizione = data_inizio_iscrizione.split(' ');\n        const data_inizio_split = data_inizio_iscrizione[0].split('/');\n        const inizio_prenotazione = new Date(data_inizio_split[2], data_inizio_split[1] - 1, data_inizio_split[0]);\n        const prima_data = new Date(inizio_prenotazione);\n\n        if (data_oggi >= prima_data) {\n            let data_fine_iscrizione = appello.p10_app_data_fine_iscr;\n            data_fine_iscrizione = data_fine_iscrizione.split(' ');\n            const data_limite_split = data_fine_iscrizione[0].split('/');\n            const scadenza_prenotazione = new Date(data_limite_split[2], data_limite_split[1] - 1, data_limite_split[0]);\n            const ultima_data = new Date(scadenza_prenotazione);\n\n            if (data_oggi <= ultima_data) {\n\n                this.alertCtrl.create({\n                    header: 'Prenotazione',\n                    subHeader: 'Vuoi prenotarti all\\'appello?',\n                    message: 'La richiesta di prenotazione sarà inviata al portale dello studente.',\n                    buttons: [\n                        {\n                            text: 'No',\n                            handler: () => {\n                                item.close();\n                                // console.log('Appello non prenotato!');\n                            }\n                        },\n                        {\n                            text: 'Si',\n                            handler: () => {\n                                this.loadingCtrl.create().then(loading => {\n                                    loading.present();\n\n                                    this.esse3.prenotaAppello(appello.p10_app_app_id, appello.p10_app_ad_id, appello.adsce_id).then(\n                                        (data) => {\n                                            // console.dir(data);\n                                            this.aggiorna(false, true);\n\n                                            // TODO\n                                            if (data['_body'] === 'success') {\n                                                this.aggiorna(true, true);\n                                                loading.dismiss();\n                                                this.toastCtrl.create({\n                                                    message: 'Prenotazione inviata! Verifica nella scheda delle ' +\n                                                    'prenotazioni l\\'esito del\\'operazione!',\n                                                    duration: 3000\n                                                }).then(\n                                                    (toast) => {toast.present(); },\n                                                    (toastErr) => { GlobalDataService.log(2, 'Toast fallito!', toastErr); });\n                                                setTimeout(() => {\n                                                    this.aggiorna(true, true);\n                                                }, 1000);\n                                            } else {\n                                                loading.dismiss();\n\n                                                this.toastCtrl.create({\n                                                    message: 'Errore: ' + data['_body'],\n                                                    duration: 4000\n                                                }).then(\n                                                    (toast) => {toast.present(); },\n                                                    (toastErr) => { GlobalDataService.log(2, 'Toast fallito!', toastErr); });\n                                            }\n                                        },\n                                        (err) => {\n                                            loading.dismiss();\n\n                                            this.toastCtrl.create({\n                                                message: 'Si è verificato un problema durante l\\'invio della prenotazione. ' +\n                                                'Riprova più tardi.',\n                                                duration: 3000\n                                            }).then(\n                                                (toast) => {toast.present(); },\n                                                (toastErr) => { GlobalDataService.log(2, 'Toast fallito!', toastErr); });\n                                        });\n\n                                });\n                            }\n                        }\n                    ]\n                }).then(alert => alert.present());\n            } else {\n\n                item.close();\n                this.toastCtrl.create({\n                    message: 'Il Termine ultimo per prenotarsi è Scaduto',\n                    duration: 3000\n                }).then( (toast) => {toast.present(); }, (toastErr) => { GlobalDataService.log(2, 'Toast fallito!', toastErr); });\n            }\n        } else {\n            item.close();\n            this.toastCtrl.create({\n                message: 'Non è possibile ancora possibile prenotarsi all\\'appello.',\n                duration: 3000\n            }).then( (toast) => {toast.present(); }, (toastErr) => { GlobalDataService.log(2, 'Toast fallito!', toastErr); });\n        }\n    }\n\n    cancellaPrenotazione(item, prenotazione) {\n        let data_limite_cancellazione = prenotazione.data_ora_app;\n        data_limite_cancellazione = data_limite_cancellazione.split(' ');\n\n        const data_limite_split = data_limite_cancellazione[0].split('/');\n        const scadenza_cancellazione = new Date(data_limite_split[2], data_limite_split[1] - 1, data_limite_split[0]);\n        const scad_data = scadenza_cancellazione.setDate(scadenza_cancellazione.getDate() - 5);\n\n        const ultima_data = new Date(scad_data);\n        const data_oggi = new Date();\n\n        if (data_oggi <= ultima_data) {\n            this.alertCtrl.create({\n                header: 'Prenotazione',\n                subHeader: 'Vuoi cancellare la prenotazione?',\n                message: 'Ricorda che se la finestra per la prenotazione è chiusa non sarà più possibile prenotarsi all\\'appello!',\n                buttons: [\n                    {\n                        text: 'No',\n                        handler: () => {\n                            item.close();\n                            // console.log('Prenotazione non cancellata!');\n                        }\n                    },\n                    {\n                        text: 'Si',\n                        handler: () => {\n                            this.loadingCtrl.create().then(loading => {\n\n                                loading.present();\n\n                                this.esse3.cancellaPrenotazione(prenotazione.app_id, prenotazione.ad_id, prenotazione.adsce_id).then(\n                                    (data) => {\n                                        // console.dir(data);\n                                        if (data['_body'] === 'success') {\n                                            this.aggiorna(false, true);\n                                            loading.dismiss();\n\n                                            this.toastCtrl.create({\n                                                message: 'Cancellazione inviata! Verifica sempre se l\\'invio ha avuto successo!',\n                                                duration: 3000\n                                            }).then(\n                                                (toast) => {toast.present(); },\n                                                (toastErr) => { GlobalDataService.log(2, 'Toast fallito!', toastErr); });\n\n                                            setTimeout(() => {\n                                                this.aggiorna(true, true);\n                                            }, 1000);\n                                        } else {\n                                            loading.dismiss();\n\n                                            this.toastCtrl.create({\n                                                message: 'Errore: ' + data['_body'],\n                                                duration: 4000\n                                            }).then(\n                                                (toast) => {toast.present(); },\n                                                (toastErr) => { GlobalDataService.log(2, 'Toast fallito!', toastErr); });\n                                            this.aggiorna(false, true);\n                                        }\n                                    },\n                                    (err) => {\n                                        // console.log(err);\n                                        loading.dismiss();\n\n                                        this.toastCtrl.create({\n                                            message: 'Si è verificato un problema durante l\\'invio della prenotazione. Riprova più tardi.',\n                                            duration: 3000\n                                        }).then(\n                                            (toast) => {toast.present(); },\n                                            (toastErr) => { GlobalDataService.log(2, 'Toast fallito!', toastErr); });\n                                    });\n                            });\n                        }\n                    }\n\n                ]\n            }).then(alert => alert.present());\n        } else {\n            item.close();\n            this.toastCtrl.create({\n                message: 'Non è possibile cancellare l\\'appello.',\n                duration: 3000\n            }).then( (toast) => {toast.present(); }, (toastErr) => { GlobalDataService.log(2, 'Toast fallito!', toastErr); });\n        }\n    }\n\n\n    pulisciTesto(item: string): string {\n        return item.replace(/\\\\r\\\\n|\\\\r|\\\\n/g, '').replace('?', '\\'');\n    }\n\n}\n"],"sourceRoot":""}